services:

  db:
    image: postgres:14
    restart: always
    container_name: database
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    deploy:
      placement:
        constraints:
          - node.labels.app.app-db-data == true

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "5050:5050"
    networks:
      - default

  backend:
    build:
      context: ./
      network: host
    container_name: fastapi
    restart: always
    depends_on:
      - db
      - pgadmin
    env_file:
      - .env
    environment:
      - PRE_START_PATH=/app/app/prestart.sh
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
    command: /start-reload.sh
    ports:
      - 5000:80
    volumes:
      - ./app:/app/app 
    networks:
      - default
 
volumes:
  app-db-data: